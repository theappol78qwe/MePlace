
package com.hossam.devloper.meplace.ActivityNavigation;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.AppCompatImageButton;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.firebase.ui.database.FirebaseRecyclerAdapter;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.hossam.devloper.meplacedesign.Contracts.Normal;
import com.hossam.devloper.meplace.R;

import java.util.HashMap;

/**
 * Created by kareem on 9/28/2016.
 */

/**
 * Copyright (c) $today.year.kareem elsayed aly,no one has the authority to edit,delete,copy any part without my permission
 */

public class Messages extends AppCompatActivity {

    AppCompatImageButton send;
    EditText message;
    RecyclerView recyclerView;
    String User1UID;
    String User2UID;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        User1UID = getIntent().getStringExtra(Normal.User1String);
        User2UID = getIntent().getStringExtra(Normal.UserString);
        setContentView(R.layout.general_messages);
        initVariables();
        LoadMessages();
        initListeners();
    }


    public void initVariables() {
        send = (AppCompatImageButton) findViewById(R.id.messages_send);
        message = (EditText) findViewById(R.id.messages_new);
        recyclerView = (RecyclerView) findViewById(R.id.messages_list);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        recyclerView.setHasFixedSize(true);
    }

    public void initListeners() {

        send.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                final boolean[] b = {true};
                if (message.getText().toString().trim().length() > 0) {
                    final DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
                    ref.child("messageidentifier").child(User1UID).child(User2UID).child("id").addValueEventListener(new ValueEventListener() {
                        @Override
                        public void onDataChange(DataSnapshot dataSnapshot) {
                            if (dataSnapshot != null && dataSnapshot.getValue(String.class) != null) {
                                if (b[0]) {
                                    String key = dataSnapshot.getValue(String.class);
                                    String key2 = ref.child("messages").child(key).push().getKey();
                                    HashMap<String, Object> map = new HashMap<>();
                                    map.put("/messages/" + key + "/" + key2 + "/msg", message.getText().toString());
                                    map.put("/messages/" + key + "/" + key2 + "/id", key2);
                                    ref.updateChildren(map).addOnCompleteListener(new OnCompleteListener<Void>() {
                                        @Override
                                        public void onComplete(@NonNull Task<Void> task) {
                                            recyclerView.getAdapter().notifyDataSetChanged();
                                            message.setText("");
                                        }
                                    });
                                    b[0] = false;
                                }
                            } else {
                                if (b[0]) {
                                    HashMap<String, Object> map = new HashMap<>();
                                    String key = ref.push().getKey();
                                    String key2 = ref.child("messages").child(key).push().getKey();
                                    map.put("/messageidentifier/" + User1UID + "/" + User2UID + "/id", key);
                                    map.put("/messageidentifier/" + User2UID + "/" + User1UID + "/id", key);
                                    map.put("/messageidentifier/" + User1UID + "/" + User2UID + "/uid", User2UID);
                                    map.put("/messageidentifier/" + User2UID + "/" + User1UID + "/uid", User1UID);
                                    map.put("/messages/" + key + "/" + key2 + "/msg", message.getText().toString());
                                    map.put("/messages/" + key + "/" + key2 + "/id", key2);
                                    ref.updateChildren(map).addOnCompleteListener(new OnCompleteListener<Void>() {
                                        @Override
                                        public void onComplete(@NonNull Task<Void> task) {
                                            recyclerView.getAdapter().notifyDataSetChanged();
                                            message.setText("");
                                        }
                                    });
                                    b[0] = false;

                                }

                            }
                        }

                        @Override
                        public void onCancelled(DatabaseError databaseError) {

                        }
                    });
                }
            }
        });
    }

    private void LoadMessages() {
        final boolean[] b = {true};
        final DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
        ref.child("messageidentifier").child(User1UID).child(User2UID).child("id").addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                if (dataSnapshot != null && dataSnapshot.getValue(String.class) != null) {
                    if (b[0]) {
                        loadAdapter(dataSnapshot.getValue(String.class));
                        b[0] = false;
                    }
                }
            }

            @Override
            public void onCancelled(DatabaseError databaseError) {

            }
        });


    }

    public void loadAdapter(String s) {
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference().child("messages").child(s);
        final FirebaseRecyclerAdapter<V, VH> adapter = new FirebaseRecyclerAdapter<V, VH>(V.class, R.layout.general_simple_text, VH.class, ref.limitToLast(30)) {
            @Override
            protected void populateViewHolder(VH viewHolder, V model, int position) {
                viewHolder.textView.setText(model.msg);
            }
        };

        recyclerView.setAdapter(adapter);
        adapter.notifyDataSetChanged();
    }

    public static class VH extends RecyclerView.ViewHolder {
        public TextView textView;

        public VH(View itemView) {
            super(itemView);
            textView = (TextView) itemView.findViewById(R.id.simple_textview);
        }
    }

    public static class V {
        public String msg;
        public String id;

        public V(String msg, String id) {
            this.msg = msg;
            this.id = id;
        }

        public V() {
            this.msg = "";
            this.id = "";
        }
    }
}
